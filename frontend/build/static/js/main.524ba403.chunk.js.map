{"version":3,"sources":["shared/services/utilService.js","shared/services/activityService.js","modules/task/cmps/Status.jsx","shared/hooks/clickOutSide.js","shared/cmps/Popper.jsx","shared/cmps/PopUpModal.jsx","shared/services/StorageService.js","shared/services/httpService.js","modules/task/cmps/TaskPreview.jsx","modules/task/cmps/TaskList.jsx","modules/group/cmps/GroupPreview.jsx","modules/group/cmps/GroupList.jsx","modules/board/cmps/BoardPreview.jsx","store/reducers/boardReducer.js","store/actions/boardActions.js","modules/board/service/boardService.js","modules/board/cmps/BoardNavigationPreview.jsx","shared/services/toasting.js","modules/board/cmps/BoardNavigationList.jsx","modules/user/service/userService.js","modules/board/cmps/BoardSideBar.jsx","modules/board/cmps/BoardAdd.jsx","shared/cmps/InviteUsers.jsx","modules/board/cmps/Activities.jsx","modules/board/cmps/BoardHeader.jsx","shared/cmps/RichTextEditor.jsx","modules/task/cmps/TaskComments.jsx","modules/task/cmps/TaskUpdates.jsx","assets/imgs/emptypage.png","modules/board/screens/Board.jsx","assets/imgs/register.png","modules/user/cmps/LoginSignup.jsx","routes.js","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","activitesActions","addActivity","action","currBoard","user","id","activities","type","unshift","text","username","task","title","group","Status","onEditStatus","clr","children","className","onClick","style","backgroundColor","useClickOutside","handler","domNode","useRef","useEffect","maybeHandler","event","current","contains","target","document","addEventListener","removeEventListener","Popper","button","popper","placementChange","disappearOnPopperClick","x","y","useState","buttonElement","setButtonElement","popperElement","setPopperElement","isOpen","setIsOpen","usePopper","placement","bottom","modifiers","name","options","offset","styles","attributes","ref","zIndex","PopUpModal","toggle","popup","isDark","props","hidden","ev","toggleModal","stopPropagation","storageService","store","key","value","val","JSON","stringify","sessionStorage","setItem","load","clear","a","defaultValue","getItem","Promise","resolve","parse","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","params","ajax","method","url","res","response","status","window","location","assign","Error","message","TaskPreview","onRemoveTask","onEditBoard","onOpenUpdates","changeTitleToggler","setChangeTitleToggler","titleRef","tempTitle","setTempTitle","focus","color","parsedDate","date","Date","endDate","getUTCMonth","slice","getUTCDate","changeTitleDom","ExampleCustomInput","forwardRef","_id","onChange","popperModifiers","padding","popperPlacement","selected","onEditDate","customInput","TaskList","tasks","initialTask","comments","members","priority","addInput","taskToAdd","SetTaskToAdd","inputHandler","targetName","taskCopy","taskToDelete","find","filter","droppableId","provided","droppableProps","innerRef","map","idx","draggableId","index","draggableProps","dragHandleProps","placeholder","onMouseDown","copyTask","push","onAddTask","GroupPreview","board","toggleName","setToggleName","groupTitle","setGroupTitle","marginBottom","groupToDelete","groups","onRemoveGroup","width","GroupList","toggleUpdates","onDragEnd","result","destination","source","startTasks","finishTasks","splice","BoardPreview","initialState","boards","types","loadBoards","payload","loadBoard","editBoard","boardService","query","save","getById","remove","edit","addMember","undefined","newBoard","memberId","BoardNavigationPreview","onRemoveBoard","boardId","useParams","history","useHistory","RemoveIcon","setRemoveIcon","spanAndIconClassName","to","onMouseEnter","onMouseLeave","then","catch","err","console","log","toasting","msg","timer","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","success","BoardNavigationList","dispatch","useDispatch","STORAGE_KEY","userService","getLoggedinUser","login","signup","logout","getUserById","get","getUsernames","users","credentials","_handleLogin","BoardSideBar","setFilter","userfullname","filteredBoards","setFilteredBoards","typeFilter","setTypeFilter","searchToggler","setSearchToggler","handleChange","checked","Object","entries","forEach","inputVal","setInputVal","regex","RegExp","test","marginInlineEnd","border","FormGroup","typeName","typeValue","FormControlLabel","control","Checkbox","label","right","Input","endAdornment","BoardAdd","onAdd","cards","description","setboard","disabled","setDisabled","boardCopy","RadioGroup","Radio","InviteUsers","usernames","setUsernames","includes","ownedBy","TextField","InputProps","startAdornment","marginRight","userId","Activities","activity","BoardHeader","descriptionInput","setDescriptionInput","titleInput","setTitleInput","toggleDesc","setToggleDesc","toggleTitle","setToggleTitle","domNodeDescription","domNodeTitle","borderBottom","RichTextEditor","onSumbit","markup","onAddComment","state","editorState","EditorState","createEmpty","refs","editor","setState","handleKeyCommand","_handleKeyCommand","bind","mapKeyToEditorCommand","_mapKeyToEditorCommand","toggleBlockType","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","command","newState","RichUtils","this","e","keyCode","getDefaultKeyBinding","newEditorState","onTab","blockType","inlineStyle","rawContentState","convertToRaw","getCurrentContent","draftToHtml","contentState","hasText","getBlockMap","first","getType","onToggle","blockStyleFn","getBlockStyle","customStyleMap","styleMap","keyBindingFn","spellCheck","React","Component","CODE","fontFamily","fontSize","block","StyleButton","preventDefault","active","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","TaskComments","comment","onDeleteComment","fullname","dangerouslySetInnerHTML","__html","TaskUpdates","close","inAnim","c","toUpperCase","Board","match","modal","setModal","useSelector","boardModule","setToggleUpdates","setTask","setUser","loading","setLoading","sidebarToggler","setSidebarToggler","setTimeout","classes","makeStyles","top","left","transform","useStyles","onAddBoard","limit","newestOnTop","rtl","pauseOnFocusLoss","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","onExited","appear","src","emptypage","alt","height","size","margin","LoginSignup","password","loginCred","setLoginCred","signupCred","setSignupCred","loggedInUser","setLoggedInUser","logSignToggler","setLogSignToggler","mounted","setMounted","onChangeHandler","doLogin","guestLogin","clearInputs","doSignup","register","variant","onSubmit","routes","exact","path","component","App","route","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","theStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.524ba403.chunk.js","sourcesContent":["export const utilService = {\n    makeId\n}\n\n\nfunction makeId(length = 5) {\n    var txt = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n}\n","import { utilService } from \"./utilService\";\n\nconst activitesActions = {\n    ADD_GROUP: \"ADD_GRPOUP\",\n    REMOVE_GROUP: \"REMOVE_GROUP\",\n    ADD_TASK: \"ADD_TASk\",\n    REMOVE_TASK: \"REMOVE_TASK\",\n}\n\nfunction addActivity(action, currBoard, user) {\n    if (action) {\n        const id = utilService.makeId()\n        if (!currBoard.activities) currBoard.activities = []\n        switch (action.type) {\n            case activitesActions.REMOVE_TASK:\n                currBoard.activities.unshift({ id, text: `${user.username} has removed the task - ${action.task.title}` })\n                break;\n            case activitesActions.ADD_TASK:\n                currBoard.activities.unshift({ id, text: `${user.username} has added the task - ${action.task.title}` })\n                break;\n            case activitesActions.REMOVE_GROUP:\n                currBoard.activities.unshift({ id, text: `${user.username} has removed the group - ${action.group.title}` })\n                break;\n            case activitesActions.ADD_GROUP:\n                currBoard.activities.unshift({ id, text: `${user.username} has added new group` })\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport {\n    addActivity,\n    activitesActions\n}","import React from \"react\";\n\nexport const Status = ({ onEditStatus, type, clr, children }) => {\n  return (\n    <div\n      className=\"status\"\n      onClick={() => {\n        onEditStatus(type, clr);\n      }}\n      style={{ backgroundColor: clr }}\n    >\n      {children}\n    </div>\n  );\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useClickOutside = (handler) => {\n    let domNode = useRef();\n    useEffect(() => {\n        let maybeHandler = (event) => {\n            if (domNode.current && !domNode.current.contains(event.target)) {\n                handler();\n            }\n        };\n        document.addEventListener(\"mousedown\", maybeHandler);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", maybeHandler);\n        };\n    });\n    return domNode;\n};","import { bottom } from \"@popperjs/core\";\nimport { useState } from \"react\";\nimport { usePopper } from \"react-popper\";\nimport { useClickOutside } from \"../hooks/clickOutSide\";\n\nexport const Popper = ({\n  button,\n  popper,\n  placementChange,\n  disappearOnPopperClick = true,\n  x,\n  y,\n}) => {\n  const [buttonElement, setButtonElement] = useState();\n  const [popperElement, setPopperElement] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  let domNode = useClickOutside(() => {\n    setIsOpen(false);\n  });\n\n  let { styles, attributes } = usePopper(buttonElement, popperElement, {\n    placement: placementChange ? placementChange : bottom,\n    modifiers: [\n      {\n        name: \"offset\",\n        options: {\n          offset: [y ? y : 0, x ? x : 0],\n        },\n      },\n    ],\n  });\n\n  return (\n    <div\n    ref={domNode}\n      onClick={() => {\n        disappearOnPopperClick && setIsOpen(!isOpen);\n      }}\n    >\n      <div\n        ref={setButtonElement}\n        onClick={() => {\n          !disappearOnPopperClick && setIsOpen(!isOpen);\n        }}\n      >\n        {button}\n      </div>\n      {isOpen && (\n        <div\n          ref={setPopperElement}\n          style={{ zIndex: '5', ...styles.popper }}\n          {...attributes.popper}\n        >\n          {popper}\n        </div>\n      )\n      }\n    </div >\n  );\n};\n","import React from \"react\";\n\nexport const PopUpModal = ({ toggle, popup, isDark = true, ...props }) => {\n  let className = isDark ? \"modal darkModal\" : \"modal\";\n\n  return (\n    <>\n      <div\n        hidden={toggle}\n        className={className}\n        onClick={(ev) => {\n          props.toggleModal(ev);\n        }}\n      >\n      </div>\n      <div className={popup} onClick={(ev) => ev.stopPropagation()}>\n        {props.children}\n      </div>\n    </>\n  );\n};\n","export const storageService = {\n    store,\n    load,\n    clear\n}\n\n\nfunction clear() {\n    sessionStorage.clear();\n}\n\nfunction store(key, value) {\n    const val = JSON.stringify(value)\n    sessionStorage.setItem(key, val);\n\n}\n\nasync function load(key, defaultValue = null) {\n    var value = sessionStorage.getItem(key);\n    if (!value) return defaultValue\n    else return Promise.resolve(JSON.parse(value));\n}\n\n","import Axios from 'axios'\nimport { storageService } from './StorageService'\n\nconst BASE_URL = process.env.NODE_ENV === 'production'\n    ? '/api/'\n    : '//localhost:3030/api/'\n\n\nvar axios = Axios.create({\n    withCredentials: true,\n})\n\nexport const httpService = {\n    get(endpoint, data, params) {\n        return ajax(endpoint, 'GET', data, params)\n    },\n    post(endpoint, data, params) {\n        return ajax(endpoint, 'POST', data, params)\n    },\n    put(endpoint, data, params) {\n        return ajax(endpoint, 'PUT', data, params)\n    },\n    delete(endpoint, data, params) {\n        return ajax(endpoint, 'DELETE', data, params)\n    }\n}\n\nasync function ajax(endpoint, method, data = null, params = null) {\n    try {\n        const res = await axios({\n            url: `${BASE_URL}${endpoint}`,\n            method,\n            data,\n            params\n        })\n        return res.data\n    } catch (err) {\n        if (err.response)\n            switch (err.response.status) {\n                case 403:\n                    storageService.clear();\n                    window.location.assign('/sign')\n                    throw new Error(err.response.data)\n                case 404:\n                    throw new Error(err.response.data);\n                default:\n                    throw new Error(err.response.data);\n            }\n        else {\n            if (err.message === 'Network Error') {\n                throw new Error(\"Network connection failed\")\n            }\n            else {\n                throw err.message;\n            }\n        }\n    }\n}","import ChatBubbleOutlineRoundedIcon from \"@material-ui/icons/ChatBubbleOutlineRounded\";\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForever from \"@material-ui/icons/DeleteForever\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\nimport { Status } from \"./Status\";\nimport { Popper } from \"../../../shared\";\nimport { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { bottom } from \"@popperjs/core\";\nimport { useClickOutside } from \"../../../shared/hooks/clickOutSide\";\nexport const TaskPreview = ({\n  task,\n  onRemoveTask,\n  onEditBoard,\n  onOpenUpdates,\n}) => {\n\n  const inputHandler = (ev) => {\n    setTempTitle(ev.target.value);\n  };\n\n  const onChangeTitle = () => {\n    if (task.title !== tempTitle) {\n      task.title = tempTitle;\n      onEditBoard();\n    }\n    setChangeTitleToggler(false)\n  }\n  const [changeTitleToggler, setChangeTitleToggler] = useState(false);\n  const titleRef = useRef(null);\n  const [tempTitle, setTempTitle] = useState(task.title)\n  useEffect(() => {\n    if (titleRef.current)\n      titleRef.current.focus()\n  }, [changeTitleToggler])\n\n  const onEditStatus = (text, color) => {\n    if (task.status.text === text && task.status.color === color) return;\n    task.status = { text, color };\n    onEditBoard();\n  };\n\n  const parsedDate = () => {\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n      \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    const date = new Date(task.endDate)\n    return `${monthNames[date.getUTCMonth()].slice(0, 3)}  ${date.getUTCDate()}`\n  }\n\n  const changeTitleDom = useClickOutside(() => {\n    if (changeTitleToggler === true)\n      setChangeTitleToggler(false)\n    if (tempTitle !== task.title)\n      setTempTitle(task.title)\n  })\n\n  const onEditDate = (date) => {\n    task.endDate = date\n    onEditBoard()\n  }\n\n  const ExampleCustomInput = forwardRef(({ onClick }, ref) => (\n    <div className=\"flex justify-center align-center\" onClick={onClick} ref={ref}>\n      <span>\n        {parsedDate()}\n      </span>\n    </div>\n  ));\n  return (\n    <div>\n      <div className=\"task-grid \">\n        <div className=\"grid-element flex align-center options-container\">\n          <Popper\n            button={<SettingsOutlinedIcon />}\n            popper={\n              <div className=\"flex column edit-menu\">\n                <button onClick={() => onRemoveTask(task._id)}><DeleteForever /> Delete</button>\n                <button onClick={() => setChangeTitleToggler(true)}><EditIcon /> Rename</button>\n              </div>\n            }\n          />\n        </div>\n        <div className=\"flex justify-space-between grid-element align-center task-title \">\n          {changeTitleToggler ? <div className=\"flex change-title \" ref={changeTitleDom}\n          >\n            <input\n              onChange={inputHandler}\n              ref={titleRef}\n              value={tempTitle}\n            />\n            <DoneOutlineIcon color=\"primary\" onClick={onChangeTitle} />\n          </div>\n            : <div className=\"ellipsis \">\n              <span >{task.title}</span>\n            </div>\n\n          }\n          <div\n            className=\"flex align-center justify-center\"\n            onClick={() => onOpenUpdates(task)}\n          >\n            <ChatBubbleOutlineRoundedIcon />\n          </div>\n        </div>\n        <button className=\"grid-element  \">\n          <AccountCircleIcon />\n        </button>\n\n        <div className=\"grid-element \">\n          <Popper\n            y={-3}\n            button={\n              <div\n                style={{ backgroundColor: task.status.color, color: \"#ffffff\" }}\n                className=\"main-status flex justify-center aling-center\"\n              >\n                <span>{task.status.text}</span>\n              </div>\n            }\n            popper={\n              <div className=\"chnage-status-container flex column align-center \">\n                <Status onEditStatus={onEditStatus} type={\"Done\"} clr={\"#33d391\"}>\n                  Done\n                </Status>\n                <Status\n                  onEditStatus={onEditStatus}\n                  type={\"Working on it\"}\n                  clr={\"#fec06e\"}\n                >\n                  Working on it!\n                </Status>\n                <Status\n                  onEditStatus={onEditStatus}\n                  type={\"Stuck\"}\n                  clr={\"#e2445c\"}\n                >\n                  Stuck\n                </Status>\n                <Status\n                  onEditStatus={onEditStatus}\n                  type={\"Not status yet\"}\n                  clr={\"#c4c4c4\"}\n                >\n                  Not status yet\n                </Status>\n              </div>\n            }\n          />\n        </div>\n        <div className=\"grid-element \">\n\n          <DatePicker popperModifiers={[\n            {\n              name: \"offset\",\n              options: {\n                offset: [-20, -5],\n                padding: 0\n              },\n            }\n          ]}\n            popperPlacement={bottom}\n            selected={new Date(task.endDate)}\n            onChange={(date) => onEditDate(date)}\n            customInput={<ExampleCustomInput />}\n          />\n\n        </div>\n        <div className=\"grid-element\">\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, useState } from \"react\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { utilService } from \"../../../shared/services/utilService\";\nimport { activitesActions } from \"../../../shared/services/activityService\";\nimport { TaskPreview } from \"./TaskPreview\";\n\nexport const TaskList = ({ tasks, group, onEditBoard, onOpenUpdates }) => {\n  const initialTask = {\n    title: \"\",\n    comments: [],\n    members: [],\n    status: {\n      text: \"Not status yet\",\n      color: \"#cccccc\",\n    },\n    priority: {\n      text: \"Set Piority\",\n      color: \"#cccccc\",\n    },\n    endDate: null,\n  };\n  const addInput = useRef(null);\n  const [taskToAdd, SetTaskToAdd] = useState(initialTask);\n  const inputHandler = (ev) => {\n    const { value } = ev.target;\n    const targetName = ev.target.name;\n    const taskCopy = { ...taskToAdd };\n    taskCopy[targetName] = value;\n    SetTaskToAdd({ ...taskCopy });\n  };\n\n  const onRemoveTask = (id) => {\n    //REMOVE TASK\n    const taskToDelete = group.tasks.find((task) => task._id === id)\n    group.tasks = group.tasks.filter((task) => task._id !== id);\n    onEditBoard({ type: activitesActions.REMOVE_TASK, task: taskToDelete });\n  };\n  const onAddTask = () => {\n    //ADD TASK\n    if (!taskToAdd.title) return\n    const copyTask = { ...taskToAdd };\n    copyTask._id = utilService.makeId();\n    copyTask.endDate = new Date();\n    group.tasks.push(copyTask);\n    onEditBoard({ type: activitesActions.ADD_TASK, task: copyTask });\n    SetTaskToAdd(initialTask);\n    addInput.current.value = \"\";\n  };\n\n  return (\n    <section className=\"task-wrapper\">\n      <Droppable droppableId={group._id}>\n        {(provided) => (\n          <div {...provided.droppableProps} ref={provided.innerRef}>\n            {tasks.map((task, idx) => {\n              return (\n                <Draggable key={task._id} draggableId={task._id} index={idx}>\n                  {(provided) => (\n                    <div\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      ref={provided.innerRef}\n                    >\n                      <TaskPreview\n                        onOpenUpdates={onOpenUpdates}\n                        onEditBoard={onEditBoard}\n                        task={task}\n                        onRemoveTask={onRemoveTask}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              );\n            })}\n            {provided.placeholder}\n            <div className=\" add-container\">\n              <div></div>\n              <input\n                onChange={inputHandler}\n                type=\"text\"\n                placeholder=\"Add + \"\n                name=\"title\"\n                ref={addInput}\n              />\n              <button onMouseDown={() => onAddTask()}>Add</button>\n              <div className=\"last\"></div>\n            </div>\n          </div>\n        )}\n      </Droppable>\n    </section>\n  );\n};\n","import { TaskList } from \"../../task\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useClickOutside } from \"../../../shared/hooks/clickOutSide\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport { Popper } from \"../../index\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForever from \"@material-ui/icons/DeleteForever\";\nimport { activitesActions } from \"../../../shared/services/activityService\";\nexport const GroupPreview = ({ group, board, onEditBoard, onOpenUpdates }) => {\n  const onRemoveGroup = (id) => {\n    //REMOVE Group\n    const groupToDelete = board.groups.find(group => group._id === id)\n    board.groups = board.groups.filter((group) => group._id !== id);\n    onEditBoard({ type: activitesActions.REMOVE_GROUP, group: groupToDelete });\n  };\n  \n  const [toggleName, setToggleName] = useState(true);\n  const [groupTitle, setGroupTitle] = useState(group.title);\n  const inputHandler = (ev) => {\n    setGroupTitle(ev.target.value);\n  };\n  let domNode = useClickOutside(() => {\n    if (toggleName === false) {\n      setToggleName(true);\n      if (group.title !== groupTitle) {\n        group.title = groupTitle;\n        onEditBoard();\n      }\n    }\n  });\n  \n  const titleRef = useRef(null);\n  useEffect(() => {\n    if (titleRef.current)\n      titleRef.current.focus()\n  }, [toggleName])\n  return (\n    <div style={{ marginBottom: \"30px\" }}>\n      <div className=\"grid-tasks-layout\" style={{ marginBottom: \"5px\" }}>\n        <div className=\"settings \" >\n          <Popper\n            button={<div className=\"flex align-center\">\n              <KeyboardArrowDownIcon />\n            </div>\n            }\n            popper={\n              <div className=\"flex column edit-menu\" >\n                <button\n                  onClick={(ev) => {\n                    ev.stopPropagation();\n                    onRemoveGroup(group._id);\n                  }}\n                >\n                  <DeleteForever /> Delete\n                </button>\n                <button onClick={() => setToggleName(!toggleName)}><EditIcon /> Rename</button>\n              </div>\n            }\n          />\n        </div>\n        <div ref={domNode} className=\" title group-title ellipsis\">\n          {toggleName ? (\n            <span\n              onClick={() => setToggleName(!toggleName)}\n            >\n              {groupTitle}\n            </span>\n          ) : (\n            <input\n              style={{ width: '100%' }}\n              className=\"group-title-edit \"\n              type=\"text\"\n              name=\"title\"\n              onChange={inputHandler}\n              value={groupTitle}\n              ref={titleRef}\n            />\n          )}\n        </div>\n        <span className=\"person\">Person</span>\n        <span className=\"status\">Status</span>\n        <span className=\"date\">Date</span>\n      </div>\n      <TaskList\n        board={board}\n        onEditBoard={onEditBoard}\n        group={group}\n        tasks={group.tasks}\n        onOpenUpdates={onOpenUpdates}\n      />\n    </div>\n  );\n};\n","import { DragDropContext } from \"react-beautiful-dnd\";\nimport { GroupPreview } from \"./GroupPreview\";\n\nexport const GroupList = ({ groups, board, onEditBoard, onOpenUpdates, toggleUpdates }) => {\n  const onDragEndHandler = (result) => {\n    const { destination, source } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n    const startTasks = groups.find(\n      (group) => group._id === source.droppableId\n    ).tasks;\n    const finishTasks = groups.find(\n      (group) => group._id === destination.droppableId\n    ).tasks;\n    const [task] = startTasks.splice(source.index, 1);\n    if (destination.droppableId === source.droppableId) {\n      startTasks.splice(destination.index, 0, task);\n      onEditBoard();\n    } else {\n      finishTasks.splice(destination.index, 0, task);\n      onEditBoard();\n    }\n  };\n  var width = toggleUpdates ? \"width-changed\" : \"\";\n  return (\n    <section className={`group-list-wrapper ${width}`}>\n      <DragDropContext onDragEnd={onDragEndHandler}>\n        {groups &&\n          groups.map((group) => {\n            return (\n              <GroupPreview\n                onEditBoard={onEditBoard}\n                key={group._id}\n                board={board}\n                group={group}\n                onOpenUpdates={onOpenUpdates}\n              ></GroupPreview>\n            );\n          })}\n      </DragDropContext>\n    </section>\n  );\n};\n","import React from \"react\";\nimport { GroupList } from \"../../group\";\n\nexport const BoardPreview = ({ groups, board, onEditBoard, onOpenUpdates , toggleUpdates }) => {\n  return (\n      <GroupList\n        board={board}\n        onOpenUpdates={onOpenUpdates}\n        onEditBoard={onEditBoard}\n        groups={groups}\n        toggleUpdates = {toggleUpdates}\n      />\n  );\n};\n","const initialState = {\n  boards: [],\n  currBoard: null\n};\nexport const types = {\n  ADD_BOARD: \"ADD_BOARD\",\n  SET_BOARDS: \"SET_BOARDS\",\n  REMOVE_BOARD: \"REMOVE_BOARD\",\n  EDIT_BOARD: \"EDIT_BOARD\",\n  SET_BOARD: \"SET_BOARD\"\n};\n\nexport function boardReducer(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_BOARD:\n      return { ...state, currBoard: action.payload };\n    case types.SET_BOARDS:\n      return { ...state, boards: action.payload };\n    case types.EDIT_BOARD:\n      return {\n        ...state,\n        boards: state.boards.map((board) =>\n          board._id === action.payload._id ? action.payload : board\n        ),\n      };\n    case types.ADD_BOARD:\n      return { ...state, boards: [...state.boards, action.payload] };\n    case types.REMOVE_BOARD:\n      return {\n        currBoard: state.currBoard._id === action.payload ? null : state.currBoard,\n        boards: state.boards.filter((board) => board._id !== action.payload),\n      };\n    default:\n      return state;\n  }\n}\n\n","import { types } from \"../reducers/boardReducer\";\n\nexport const loadBoards = (payload) => ({\n  type: types.SET_BOARDS,\n  payload,\n});\nexport const loadBoard = (payload) => ({\n  type: types.SET_BOARD,\n  payload,\n});\nexport const addBoard = (payload) => ({\n  type: types.ADD_BOARD,\n  payload,\n});\nexport const removeBoard = (payload) => ({\n  type: types.REMOVE_BOARD,\n  payload,\n});\nexport const editBoard = (payload) => ({\n  type: types.EDIT_BOARD,\n  payload,\n});\n","import { httpService } from '../../../shared/'\n\nexport const boardService = {\n    query,\n    save,\n    getById,\n    remove,\n    edit,\n    addMember\n}\nasync function query(type) {\n    try {\n        return await httpService.get('board', undefined, { type })\n    } catch (err) {\n        throw err.message;\n    }\n}\n\nasync function getById(id) {\n    try {\n        return await httpService.get(`board/${id}`, id)\n    } catch (err) {\n        throw err.message;\n    }\n}\n\nasync function save(board) {\n    try {\n        return await httpService.post('board', board)\n    }\n    catch (err) {\n        throw err.message;\n    }\n}\nasync function remove(id) {\n    //   return httpService.delete(`board/${id}`).then(()=> id)\n    try {\n        const res =  await httpService.delete(`board/${id}`)\n        return res;\n    }\n    catch (err) {\n        throw err.message\n    }\n}\nasync function edit(board) {\n    try {\n        const newBoard = await httpService.put(`board`, board)\n        return newBoard;\n    }\n    catch (err) {\n        throw err.message\n    }\n}\nasync function addMember(board, memberId) {\n    try {\n        const newBoard = await httpService.put(`board/member`, { board, memberId })\n        return newBoard\n    }\n    catch (err) {\n        throw err.message\n    }\n}\n\n\n","import { Link } from \"react-router-dom\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useState } from \"react\";\n\nexport const BoardNavigationPreview = ({ board, onRemoveBoard, boards }) => {\n  let { boardId } = useParams();\n  const history = useHistory();\n  if (!boardId) boardId = boards[0]._id;\n  const [RemoveIcon, setRemoveIcon] = useState(<DeleteOutlineIcon />);\n  //added class for scss\n  let className = \"\";\n  let spanAndIconClassName = \"\"\n  if (boardId === board._id) {\n    className += \" active\";\n    spanAndIconClassName += \" span-active\";\n  }\n\n  return (\n    <section className={\"side-boardlist-preview-container flex align-center justify-space-between\" + className}>\n      <Link\n        className={\n          spanAndIconClassName\n        }\n        to={`/board/${board._id}`}\n      >\n        <span className={spanAndIconClassName}>\n          { board.title}\n        </span>\n        </Link >\n      <div\n        className={\"delete-btn \" + spanAndIconClassName}\n        onMouseEnter={() => setRemoveIcon(<DeleteForeverIcon />)}\n        onMouseLeave={() => setRemoveIcon(<DeleteOutlineIcon />)}\n        onClick={() => {\n          onRemoveBoard(board._id).then(() => {\n            history.push(\"/board\");\n          }).catch(err => console.log(err));\n        }}\n        >\n        {RemoveIcon}\n      </div>\n    </section >\n  );\n};\n","import { toast } from 'react-toastify';\nconst toasting = (type, msg, timer) => {\n    switch (type) {\n        case 0:\n            toast.error(msg, {\n                position: \"bottom-center\",\n                autoClose: timer || 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n            break;\n        case 1:\n            toast.success(msg, {\n                position: \"bottom-center\",\n                autoClose: timer || 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            });\n            break;\n        default:\n            break;\n    }\n}\n\nexport default toasting;","import { removeBoard } from \"../../../store/actions/boardActions\";\nimport { boardService } from \"../service/boardService\";\nimport { useDispatch } from \"react-redux\";\nimport { BoardNavigationPreview } from \"./BoardNavigationPreview\";\nimport toasting from \"../../../shared/services/toasting\";\n\nexport const BoardNavigationList = ({ boards, msg }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveBoard = async (boardId) => {\n    try {\n      const res = await boardService.remove(boardId);\n      dispatch(removeBoard(res));\n      toasting(1, \"Removed board successfully\");\n    } catch (err) {\n      return toasting(0, err, 2000);\n    }\n  }\n\n\n  return (\n    <div className=\"sidebar-boardlist-container \">\n      {boards && (\n        <div className=\"board-list-container flex column  \">\n          {boards.map((board) => {\n            return (\n              <BoardNavigationPreview\n                key={board._id}\n                board={board}\n                boards={boards}\n                onRemoveBoard={onRemoveBoard}\n              ></BoardNavigationPreview>\n            );\n          })}\n        </div>\n      )}\n      {boards.length === 0 &&\n        (msg ? (\n          <span>{msg}</span>\n        ) : (\n          <div className=\"flex column align-center\">\n            <span>Workspace is empty.</span>\n            <span>Create or add boards!</span>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import { httpService, storageService } from '../../../shared';\nimport axios from 'axios';\n\nconst BASE_URL = 'http://localhost:3030/api/user';\n\nconst STORAGE_KEY = 'loggedinUser'\n\nexport const userService = {\n    getLoggedinUser,\n    login,\n    signup,\n    logout,\n    getUserById\n    , getUsernames\n}\n\nasync function getUsernames(filter) {\n    try {\n        const users = await httpService.get('user', null, { filter })\n        return users\n    }\n    catch (err) {\n        throw err.message;\n    }\n}\n\nasync function login(credentials) {\n    try {\n        const user = await httpService.post('user/login', credentials)\n        if (!user) return Error(\"Some error occurred\")\n        return _handleLogin(user);\n    }\n    catch (err) {\n        throw err.message;\n    }\n}\n\nasync function signup(credentials) {\n    try {\n        const user = await httpService.post('user/signup', credentials)\n        if (!user) return Error(\"Some error occurred\")\n        return _handleLogin(user);\n    }\n    catch (err) {\n        throw err.message;\n    }\n}\nasync function logout() {\n    try {\n        const res = await httpService.post(`user/logout`);\n        storageService.clear();\n        return res\n    }\n    catch (err) {\n        throw err.message;\n    }\n}\n\nfunction getUserById(id) {\n    return axios.get(`${BASE_URL}/user/${id}`)\n        .then(res => res.data)\n        .then((user) => {\n            return user\n        })\n}\n\nfunction getLoggedinUser() {\n    return storageService.load(STORAGE_KEY)\n}\n\nfunction _handleLogin(user) {\n    storageService.store(STORAGE_KEY, user)\n    return user\n}","import { BoardNavigationList } from \"./BoardNavigationList\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { useEffect, useState } from \"react\";\nimport { Popper } from \"../../../shared\";\nimport { right } from \"@popperjs/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { userService } from \"../../user/service/userService\";\nimport FilterAltOutlinedIcon from '@mui/icons-material/FilterAltOutlined';\nimport { useClickOutside } from \"../../../shared/hooks/clickOutSide\";\nimport { Input } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nexport const BoardSideBar = ({ boards, toggleModal, setFilter, userfullname }) => {\n  const [filteredBoards, setFilteredBoards] = useState(boards);\n\n  const [typeFilter, setTypeFilter] = useState({\n    \"Employees\": false,\n    \"Campaigns\": false,\n    \"Projects\": false,\n    \"Creatives\": false,\n    \"Clients\": false,\n    \"Tasks\": false,\n  });\n\n  const [searchToggler, setSearchToggler] = useState(false)\n  const handleChange = (event) => {\n    setTypeFilter({\n      ...typeFilter,\n      [event.target.name]: event.target.checked,\n    });\n  };\n  useEffect(() => {\n    var filter;\n    Object.entries(typeFilter).forEach(([key, value]) => {\n      if (!filter) filter = []\n      if (value)\n        filter.push(key)\n    })\n    setFilter(filter)\n  }, [typeFilter, setFilter])\n\n  useEffect(() => {\n    setFilteredBoards(boards);\n  }, [boards]);\n\n  const [inputVal, setInputVal] = useState(\"\");\n  const inputHandler = (ev) => {\n    setInputVal(ev.target.value);\n\n  };\n  useEffect(() => {\n    const regex = new RegExp(inputVal, \"i\");\n    setFilteredBoards(boards.filter((board) => regex.test(board.title)));\n  }, [inputVal, boards])\n\n  const doLogout = () => {\n    userService\n      .logout()\n      .then(() => {\n        window.location.assign(\n          '/sign'\n        )\n      })\n  };\n\n\n\n  return (\n    <section className=\"flex column sidebar-container\">\n      <div className=\"top-section\">\n        <div className=\"username-container flex justify-space-between\">\n          <span >{userfullname} </span>\n          <button onClick={doLogout} >\n            <LogoutIcon />\n          </button>\n        </div>\n        <div className=\"tools-container\">\n          <button\n            className=\"flex align-center\"\n            onClick={toggleModal}\n          >\n            <AddCircleOutlineOutlinedIcon style={{ marginInlineEnd: '4px' }} /> Add\n          </button>\n          <Popper\n            button={\n              <button className=\"flex align-center \">\n                <FilterAltOutlinedIcon style={{ marginInlineEnd: '2px' }} />\n                Filters\n              </button>\n            }\n            popper={\n              <div\n                className=\"flex column\"\n                style={{ border: \"2px solid black\", backgroundColor: \"white\", padding: '5px' }}\n              >\n                <FormGroup>\n                  {Object.entries(typeFilter).map(([typeName, typeValue], idx) => {\n                    return <FormControlLabel\n                      key={idx}\n                      control={\n                        <Checkbox\n                          checked={typeValue}\n                          onChange={handleChange}\n                          name={typeName}\n                        />\n                      }\n                      label={typeName}\n                    />\n                  }\n                  )}\n                </FormGroup>\n              </div>\n            }\n            y={42}\n            disappearOnPopperClick={false}\n            placementChange={right}\n          ></Popper>\n          <div className=\"flex align-center\" >\n            {searchToggler ? <Input\n              className=\"search\"\n              label=\"Search\"\n              type=\"text\"\n              onChange={inputHandler}\n              value={inputVal}\n              endAdornment={<button onClick={() => {\n                setSearchToggler(false)\n                setInputVal('')\n              }}><CloseIcon /></button>}\n\n            /> : <button className=\"flex align-center\" onClick={() => { setSearchToggler(true) }}>\n              <SearchOutlinedIcon /> Search\n            </button>\n            }\n          </div>\n        </div>\n      </div>\n\n      <div className=\"spacer\" />\n\n      {boards && <BoardNavigationList\n        boards={filteredBoards}\n        msg={\n          boards.length > 0 && filteredBoards.length === 0 && \"No results found\"\n        }\n      ></BoardNavigationList>}\n    </section>\n  );\n};\n","import { FormControlLabel, Radio, RadioGroup } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nexport const BoardAdd = ({ toggleModal, onAdd, types }) => {\n  const [board, setboard] = useState({\n    title: \"\",\n    cards: [],\n    members: [],\n    groups: [],\n    type: \"items\",\n    description: \"Hello this is generic description, change me please\",\n  });\n\n  const [disabled, setDisabled] = useState(false);\n\n  const inputHandler = (ev) => {\n    const { value } = ev.target;\n    const targetName = ev.target.name;\n    const boardCopy = { ...board };\n    boardCopy[targetName] = value;\n    setboard({ ...boardCopy });\n  };\n\n  return (\n    <div className=\"flex column align-center add-board-container\">\n      <h1>Create board</h1>\n\n      <div>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Board name...\"\n          value={board.title}\n          onChange={inputHandler}\n        />\n      </div>\n\n\n      <div className=\"close-container\" onClick={(ev) => {\n        toggleModal(ev);\n      }}>\n        <div className=\"leftright\"></div>\n        <div className=\"rightleft\"></div>\n      </div>\n\n\n      <RadioGroup\n        className=\"radio-group\"\n        id=\"type-radiogroup\"\n        defaultValue=\"Items\"\n        name=\"type\"\n        onChange={inputHandler}\n      >\n        {types.map((type, idx) => {\n          return (\n            <FormControlLabel\n              key={idx}\n              value={type}\n              control={<Radio />}\n              label={type}\n            />\n          );\n        })}\n      </RadioGroup>\n      <button\n        disabled={disabled}\n        className=\"btn-add\"\n        onClick={(ev) => {\n          onAdd(board, ev);\n          setDisabled(true);\n        }}\n      >\n        Create\n      </button>\n    </div>\n  );\n};\n","import { TextField } from \"@material-ui/core\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { boardService } from \"../../modules/board/service/boardService\";\nimport { userService } from \"../../modules/user/service/userService\";\nimport { editBoard, loadBoard } from \"../../store/actions/boardActions\";\n\nexport const InviteUsers = ({ board }) => {\n  const [usernames, setUsernames] = useState(null);\n  const [filter, setFilter] = useState('')\n  const dispatch = useDispatch()\n\n\n  useEffect(() => {\n    const getUsernames = async () => {\n      try {\n        let users = await userService.getUsernames(filter);\n        users = users.filter((user) => !board.members.includes(user._id) && user._id !== board.ownedBy);\n        setUsernames(users);\n      } catch { }\n    };\n    getUsernames();\n  }, [filter,board.ownedBy,board.members]);\n\n\n  const onInvite = (userId) => {\n    boardService.addMember(board, userId).then((res) => {\n      dispatch(editBoard(res));\n      dispatch(loadBoard(res));\n    })\n  }\n\n\n  const inputHandler = (ev) => {\n    setFilter(ev.target.value);\n  };\n\n  return (\n\n    <div className=\"user-list-container\">\n      <TextField\n        label=\"Username\"\n        InputProps={{\n          startAdornment: (\n            <AccountCircle style={{ marginRight: '2px' }} />\n          ),\n        }}\n        onClick={(ev) => ev.stopPropagation()}\n        onChange={inputHandler}\n      />\n      <div className=\"flex column align-center user-list\" >\n        {(usernames && usernames.length > 0) ?\n          usernames.map((user) => {\n            return <button key={user._id} onClick={() => onInvite(user._id)}>{user.username}</button>;\n          }) : <span>No users to invite</span>}\n      </div>\n    </div>\n  );\n};\n","export const Activities = ({ activities }) => {\n\n    return (<div className=\"activities-container flex column\" >\n        {(activities && activities.length > 0) ? activities.map(activity => <div key={activity.id}>\n            <span >{activity.text}</span>\n            <hr />\n        </div >) : <span>No activities yet...</span>}\n    </div>)\n}","import PersonOutlineIcon from \"@material-ui/icons/PersonOutline\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport { utilService } from \"../../../shared/services/utilService\";\nimport { Popper } from \"../../../shared\";\nimport { InviteUsers } from \"../../../shared/cmps/InviteUsers\";\nimport { useEffect, useState } from \"react\";\nimport { useClickOutside } from \"../../../shared/hooks/clickOutSide\";\nimport { Activities } from \"./Activities\";\nimport { activitesActions } from \"../../../shared/services/activityService\";\n\nexport const BoardHeader = ({ board, onEditBoard }) => {\n  const [descriptionInput, setDescriptionInput] = useState(board?.description);\n  const [titleInput, setTitleInput] = useState(board?.title);\n  const [toggleDesc, setToggleDesc] = useState(true);\n  const [toggleTitle, setToggleTitle] = useState(true);\n\n  const onAddGroup = () => {\n    const group = {\n      _id: utilService.makeId(),\n      title: \"New Group\",\n      tasks: [],\n    };\n    board.groups.unshift(group);\n    onEditBoard({ type: activitesActions.ADD_GROUP });\n  };\n  useEffect(() => {\n    if (board) {\n      setDescriptionInput(board.description);\n      setTitleInput(board.title);\n    }\n  }, [board]);\n\n  const descInputHandler = (ev) => {\n    setDescriptionInput(ev.target.value);\n  };\n  const titleInputHandler = (ev) => {\n    setTitleInput(ev.target.value);\n  };\n\n  let domNodeDescription = useClickOutside(() => {\n    if (toggleDesc === false) {\n      setToggleDesc(true);\n      if (board.description === descriptionInput) return;\n      board.description = descriptionInput;\n      onEditBoard();\n    }\n  });\n  let domNodeTitle = useClickOutside(() => {\n    if (toggleTitle === false) {\n      setToggleTitle(true);\n      if (board.title === titleInput) return;\n      board.title = titleInput;\n      onEditBoard();\n    }\n  });\n\n  return (\n    board && (\n      <div className=\"board-header-content-wrapper flex column\">\n        <div\n          className=\"head flex column\"\n\n        >\n          <div ref={domNodeTitle}>\n            {toggleTitle ? (\n              <h1\n                className=\"board-title\"\n                onClick={() => setToggleTitle(!toggleTitle)}\n              >\n                {titleInput && titleInput.length > 15\n                  ? titleInput.slice(0, 15) + \"...\"\n                  : titleInput}\n              </h1>\n            ) : (\n              <input\n                className=\"board-title-edit\"\n                type=\"text\"\n                name=\"title\"\n                onChange={titleInputHandler}\n                value={titleInput}\n              />\n            )}\n          </div>\n          <div ref={domNodeDescription} className=\"desc\">\n            {toggleDesc ? (\n              <div className=\"ellipsis\" onClick={() => setToggleDesc(!toggleDesc)}>\n                <span>\n                  {descriptionInput === \"\" ? \"Add description\" : descriptionInput}\n                </span>\n              </div>\n            ) : (\n              <textarea\n                name=\"description\"\n                style={{\n\n                }}\n                placeholder=\"Add board description\"\n                onChange={descInputHandler}\n                value={descriptionInput}\n              />\n            )}\n          </div>\n          <div\n            className=\"flex header-options align-center \"\n          >\n            <button className=\"newitem-btn\" onClick={onAddGroup}>New Group</button>\n            <Popper\n              button={\n                <button className=\"flex align-center invite\">\n                  Invite <PersonOutlineIcon></PersonOutlineIcon>\n                </button>\n              }\n              popper={<InviteUsers board={board} onEditBoard={onEditBoard} />}\n            />\n            <Popper\n              button={\n                <button className=\"flex align-center activ\">\n                  Activity <TrendingUpIcon></TrendingUpIcon>\n                </button>\n              }\n              popper={\n                <Activities activities={board.activities} />\n              }\n            />\n\n          </div>\n        </div>\n          <div\n            className=\"spacer\"\n            style={{\n              width: '100%',\n              borderBottom: \"1px solid lightgrey\",\n              marginBottom: \"5px\",\n            }}\n          />\n        {/* <div className=\"filters-header flex justify-center\">\n          <button className=\"newitem-btn\" onClick={onAddGroup}>New Group</button> */}\n        {/* <div className=\"input-section flex align-center\">\n              <SearchOutlined />\n              <input placeholder=\"Search..\" />\n            </div>\n            <button className=\"flex align-center tooltip\">\n              <FilterListOutlinedIcon></FilterListOutlinedIcon>{\" \"}\n              <span className=\"tooltiptext\">Filter By Anything</span> Filter{\" \"}\n            </button>\n            <button className=\"flex align-center tooltip\">\n              <ImportExportIcon></ImportExportIcon>{\" \"}\n              <span className=\"tooltiptext\">Sort By Any Column</span> Sort{\" \"}\n            </button> */}\n        {/* </div>\n        <div\n          className=\"last-spacer\"\n          style={{\n            width: '100%',\n            borderBottom: \"1px solid lightgrey\",\n            marginBottom: \"4px\",\n          }}\n        /> */}\n      </div>\n    )\n  );\n};\n","import React from \"react\";\nimport {\n  Editor,\n  EditorState,\n  getDefaultKeyBinding,\n  RichUtils,\n  convertToRaw,\n} from \"draft-js\";\nimport \"../../assets/shared/cmps/RichTextEditor.scss\";\nimport draftToHtml from \"draftjs-to-html\";\n\nclass RichTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { editorState: EditorState.createEmpty() };\n\n    this.focus = () => this.refs.editor.focus();\n    this.onChange = (editorState) => this.setState({ editorState });\n\n    this.handleKeyCommand = this._handleKeyCommand.bind(this);\n    this.mapKeyToEditorCommand = this._mapKeyToEditorCommand.bind(this);\n    this.toggleBlockType = this._toggleBlockType.bind(this);\n    this.toggleInlineStyle = this._toggleInlineStyle.bind(this);\n  }\n\n  _handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _mapKeyToEditorCommand(e) {\n    if (e.keyCode === 9 /* TAB */) {\n      const newEditorState = RichUtils.onTab(\n        e,\n        this.state.editorState,\n        4 /* maxDepth */\n      );\n      if (newEditorState !== this.state.editorState) {\n        this.onChange(newEditorState);\n      }\n      return;\n    }\n    return getDefaultKeyBinding(e);\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(RichUtils.toggleBlockType(this.state.editorState, blockType));\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(this.state.editorState, inlineStyle)\n    );\n  }\n  onSumbit = (markup) => \n  {\n    this.props.onAddComment(markup)\n  }\n\n  render() {\n    const { editorState } = this.state;\n    const rawContentState = convertToRaw(editorState.getCurrentContent());\n    const markup = draftToHtml(rawContentState);\n\n    // If the user changes block type before entering any text, we can\n    // either style the placeholder or hide it. Let's just hide it now.\n    let className = \"RichEditor-editor\";\n    var contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      if (contentState.getBlockMap().first().getType() !== \"unstyled\") {\n        className += \" RichEditor-hidePlaceholder\";\n      }\n    }\n    return (\n      <>\n        <div className=\"RichEditor-root\">\n          <div className=\"flex\">\n            <BlockStyleControls\n              editorState={editorState}\n              onToggle={this.toggleBlockType}\n            />\n            <InlineStyleControls\n              editorState={editorState}\n              onToggle={this.toggleInlineStyle}\n            />\n          </div>\n          <div className={className} onClick={this.focus}>\n            <Editor\n              blockStyleFn={getBlockStyle}\n              customStyleMap={styleMap}\n              editorState={editorState}\n              handleKeyCommand={this.handleKeyCommand}\n              keyBindingFn={this.mapKeyToEditorCommand}\n              onChange={this.onChange}\n              placeholder=\"Update me...\"\n              ref=\"editor\"\n              spellCheck={true}\n            />\n          </div>\n        </div>\n        <button className=\"update-btn\" onClick={() => this.onSumbit(markup)}>Update</button>\n      </>\n    );\n  }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case \"blockquote\":\n      return \"RichEditor-blockquote\";\n    default:\n      return null;\n  }\n}\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n    let className = \"RichEditor-styleButton\";\n    if (this.props.active) {\n      className += \" RichEditor-activeButton\";\n    }\n\n    return (\n      <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n    );\n  }\n}\n\nconst BLOCK_TYPES = [\n  { label: \"H1\", style: \"header-one\" },\n  { label: \"H2\", style: \"header-two\" },\n  { label: \"H3\", style: \"header-three\" },\n  { label: \"H4\", style: \"header-four\" },\n  { label: \"H5\", style: \"header-five\" },\n  { label: \"H6\", style: \"header-six\" },\n];\n\nconst BlockStyleControls = (props) => {\n  const { editorState } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  );\n};\n\nvar INLINE_STYLES = [\n  { label: \"Bold\", style: \"BOLD\" },\n  { label: \"Italic\", style: \"ITALIC\" },\n  { label: \"Underline\", style: \"UNDERLINE\" },\n  { label: \"Monospace\", style: \"CODE\" },\n];\n\nconst InlineStyleControls = (props) => {\n  const currentStyle = props.editorState.getCurrentInlineStyle();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map((type) => (\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default RichTextEditor;\n","\nexport const TaskComments = ({ comment, onDeleteComment }) => {\n  return (\n    <div className=\"comment flex column  align-center\" >\n      <h4>{comment.user.fullname}</h4>\n      <div className=\"text ellipsis\"\n        dangerouslySetInnerHTML={{\n          __html: comment.text\n        }}>\n\n      </div>\n      <button onClick={() => onDeleteComment(comment._id)}>Delete</button>\n    </div >\n  )\n}\n\n\n\n","import RichTextEditor from \"../../../shared/cmps/RichTextEditor\";\nimport { utilService } from \"../../../shared/services/utilService\";\nimport { TaskComments } from \"./TaskComments\";\n\nexport const TaskUpdates = ({ task, onEditBoard, close, user, inAnim }) => {\n  const onAddComment = (comment) => {\n    task.comments.unshift({ text: comment, _id: utilService.makeId(), user });\n    onEditBoard();\n  };\n  const onDeleteComment = (id) => {\n    task.comments = task.comments.filter((c) => c._id !== id);\n    onEditBoard();\n  };\n\n\n  return (\n    <div\n      className=\"comments-wrapper flex column align-center\"\n    >\n      <div>\n        <button className=\"x\" onClick={close}>\n          x\n        </button>\n        <div className=\"ellipsis header\">\n          <span>{task.title.charAt(0).toUpperCase() + task.title.slice(1)}</span>\n        </div>\n      </div>\n      <div className=\"rich-text-editor-wrapper flex column\">\n\n\n        <RichTextEditor onAddComment={onAddComment} />\n      </div>\n      {\n        task.comments.length === 0 ? (\n          <span className=\"align-self-center\">No updates yet...</span>\n        ) : (\n          task.comments.map((comment) => (\n            <TaskComments key={comment._id} comment={comment} onDeleteComment={onDeleteComment} />\n          ))\n        )\n      }\n    </div >\n  );\n};\n","export default __webpack_public_path__ + \"static/media/emptypage.c08a4850.png\";","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BoardPreview } from \"../cmps/BoardPreview\";\nimport { BoardSideBar } from \"../cmps/BoardSideBar\";\nimport { PopUpModal } from \"../../../shared/cmps/PopUpModal\";\nimport { BoardAdd } from \"../cmps/BoardAdd\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { BoardHeader } from \"../cmps/BoardHeader\";\nimport { boardService } from \"../service/boardService\";\nimport { CSSTransition } from 'react-transition-group';\nimport { RotateLoader } from \"react-spinners\";\nimport {\n  addBoard,\n  editBoard,\n  loadBoard,\n  loadBoards,\n} from \"../../../store/actions/boardActions\";\nimport { TaskUpdates } from \"../../task/cmps/TaskUpdates\";\nimport emptypage from \"../../../assets/imgs/emptypage.png\";\nimport { userService } from \"../../user/service/userService\";\nimport { addActivity } from \"../../../shared/services/activityService\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Fragment } from \"react\";\nimport toasting from \"../../../shared/services/toasting\";\n\nexport const Board = ({ match }) => {\n  const [modal, setModal] = useState(false);\n  const { currBoard, boards } = useSelector((state) => state.boardModule);\n  const dispatch = useDispatch();\n  const [toggleUpdates, setToggleUpdates] = useState(false);\n  const [task, setTask] = useState();\n  const [filter, setFilter] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [sidebarToggler, setSidebarToggler] = useState(true);\n\n\n  useEffect(() => {\n    userService.getLoggedinUser().then((user) => {\n      setUser(user)\n      if (!user)\n        window.location.assign(\n          '/sign'\n        )\n    })\n  }, [])\n\n  useEffect(() => {\n    boardService.query(filter).then((res) => {\n      dispatch(loadBoards(res))\n    });\n  }, [filter, dispatch])\n\n  useEffect(() => {\n    if (!loading) {\n      boardService.query().then((res) => {\n        dispatch(loadBoards(res));\n        setTimeout(() => setLoading(true), 2000)\n      }).catch(err => toasting(0, err))\n    }\n  }, [dispatch, loading])\n\n\n  useEffect(() => {\n    let boardId = match.params.boardId;\n    if (!boards || boards?.length === 0) return\n    if (currBoard && currBoard._id === boardId) return\n    if (boardId) {\n      boardService.getById(boardId).then(board => {\n        dispatch(loadBoard(board));\n      }).catch(err => {\n        toasting(0, err)\n      });\n    }\n    else {\n      if (!currBoard)\n        dispatch(loadBoard(boards[0]));\n    }\n  }, [boards, match.params, dispatch, currBoard]);\n\n\n\n  const toggleModal = (ev) => {\n    ev.stopPropagation();\n    setModal(!modal);\n  };\n\n  //Modal Generic CSS\n  const useStyles = makeStyles({\n    popup: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      zIndex: '11'\n    },\n  });\n  const classes = useStyles();\n\n  //Adding new Board\n  const onAddBoard = async (board, ev) => {\n    ev.stopPropagation();\n    boardService.save(board).then((res) => {\n      if (!res) toasting(0, \"Some errors occurred\")\n      dispatch(addBoard(res));\n      toggleModal(ev);\n      toasting(1, \"Added board successfully\")\n    }).catch(() => toasting(0, \"Some errors occurred\"))\n  }\n  const onEditBoard = async (action = null) => {\n    // UPDATING THE BOARD (SERVER + STORE)\n    if (action) addActivity(action, currBoard, user)\n    boardService.edit(currBoard).then((res) => {\n      dispatch(editBoard(res));\n    }).catch(err => console.log(err))\n  };\n  const onOpenUpdates = (task) => {\n    setTask(task);\n    setToggleUpdates(true);\n  };\n\n  return <Fragment>\n\n    <ToastContainer\n      limit={3}\n      position=\"bottom-center\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n\n\n    {loading ? (\n      <div className=\"board-layout flex\">\n\n        <PopUpModal\n          toggle={!toggleUpdates}\n          toggleModal={(ev) => {\n            ev.stopPropagation()\n            setToggleUpdates(false)\n          }}\n        >\n          <CSSTransition\n            in={toggleUpdates}\n            timeout={500}\n            classNames=\"comments-wrapper\"\n            unmountOnExit\n            onEnter={() => setToggleUpdates(true)}\n            onExited={() => setToggleUpdates(false)}\n          >\n            <TaskUpdates\n              inAnim={toggleUpdates}\n              user={user}\n              task={task}\n              onEditBoard={onEditBoard}\n              close={() => setToggleUpdates(false)}\n            />\n          </CSSTransition>\n        </PopUpModal>\n\n        <PopUpModal\n          toggle={!modal}\n          toggleModal={toggleModal}\n          popup={classes.popup}\n          isDark\n        >\n          <CSSTransition\n            in={modal}\n            timeout={300}\n            classNames=\"add-board-container\"\n            unmountOnExit\n            onEnter={() => setModal(true)}\n            onExited={() => setModal(false)}\n          >\n            <BoardAdd\n              types={[\n                \"Employees\",\n                \"Campaigns\",\n                \"Projects\",\n                \"Creatives\",\n                \"Clients\",\n                \"Tasks\",\n              ]}\n              onAdd={onAddBoard}\n              toggleModal={toggleModal}\n            />\n          </CSSTransition>\n        </PopUpModal>\n\n        <div className={\"half-circle\" + (!sidebarToggler ? \" closed\" : ' opened')}\n          onClick={() => {\n            setSidebarToggler(!sidebarToggler)\n          }}\n        >  <i\n            className={\"arrow \" + (!sidebarToggler ? \"right\" : 'left')} />\n        </div>\n\n        <CSSTransition\n          in={sidebarToggler}\n          appear={true}\n          timeout={500}\n          classNames=\"sidebar-container\"\n          unmountOnExit\n          onEnter={() => setSidebarToggler(true)}\n          onExited={() => setSidebarToggler(false)}\n        >\n          <BoardSideBar\n            toggleModal={toggleModal}\n            boards={boards} setFilter={setFilter}\n            userfullname={user.fullname}\n          />\n        </CSSTransition>\n\n\n        {(boards && boards.length > 0 ? (\n          <div className=\"board-container-wrapper\">\n            <div className=\"board-container flex column \">\n              <BoardHeader\n                board={currBoard}\n                onEditBoard={onEditBoard}\n              ></BoardHeader>\n              {currBoard ? (\n                <BoardPreview\n                  onEditBoard={onEditBoard}\n                  board={currBoard}\n                  groups={currBoard.groups}\n                  onOpenUpdates={onOpenUpdates}\n                  toggleUpdates={toggleUpdates}\n                />\n              ) : <h1>Not found</h1>}\n\n            </div>\n          </div>\n        ) : (\n          <div className=\"emptypage-img-container\">\n            <img src={emptypage} alt=\"icon\"></img>\n          </div>\n        ))}\n      </div >\n\n    ) : <div className=\"flex align-center justify-center\" style={{ height: '100%' }}>\n      <RotateLoader color={'#0398fc'} size={30} margin={40}></RotateLoader>\n    </div>}\n  </Fragment >\n};\n","export default __webpack_public_path__ + \"static/media/register.0e844a37.png\";","import { TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { userService } from \"../service/userService\";\nimport register from \"../../../assets/imgs/register.png\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport toasting from \"../../../shared/services/toasting\";\n\n\n\nexport const LoginSignup = () => {\n  // const strongPasswordRegex = useRef(\n  //   new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\")\n  // );\n  const [loginCred, setLoginCred] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [signupCred, setSignupCred] = useState({\n    fullname: \"\",\n    username: \"\",\n    password: \"\",\n  });\n\n\n\n\n  const history = useHistory();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [logSignToggler, setLogSignToggler] = useState(true);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    userService.getLoggedinUser().then((user) => {\n      setLoggedInUser(user)\n      setMounted(true)\n    })\n  }, [setMounted])\n\n  const onChangeHandler = (ev) => {\n    const { name, value } = ev.target;\n    logSignToggler\n      ? setLoginCred({ ...loginCred, [name]: value })\n      : setSignupCred({ ...signupCred, [name]: value });\n  };\n\n  const doLogin = async (ev) => {\n    ev.preventDefault();\n    const { username, password } = loginCred;\n    if (!username || !password) {\n      toasting(0, \"Please enter username or password\")\n      return;\n    }\n    userService\n      .login(loginCred)\n      .then((user) => {\n        setLoginCred({ username: \"\", password: \"\" });\n        setLoggedInUser(user);\n        history.push(\"/board\");\n      })\n      .catch((err) => {\n        toasting(0, err)\n      });\n  };\n\n  const guestLogin = async (ev) => {\n    userService\n      .login({\n        username: \"guest\",\n        password: \"guest\",\n      })\n      .then((user) => {\n        setLoginCred({ username: \"\", password: \"\" });\n        setLoggedInUser(user);\n        history.push(\"/board\");\n      })\n      .catch((err) => {\n        toasting(0, err)\n      });\n  };\n\n  const doLogout = () => {\n    userService\n      .logout()\n      .then((msg) => {\n        toasting(1, msg)\n        setLoggedInUser(null);\n      })\n      .catch((err) => {\n        toasting(0, err)\n      });\n  };\n\n  const clearInputs = () => {\n    setSignupCred({ fullname: \"\", username: \"\", password: \"\" });\n    setLoginCred({ username: \"\", password: \"\" });\n  };\n  const doSignup = async (ev) => {\n    ev.preventDefault();\n    const { username, password, fullname } = signupCred;\n    // (?=.*[a-z])\tThe string must contain at least 1 lowercase alphabetical character\n    // (?=.*[A-Z])\tThe string must contain at least 1 uppercase alphabetical character\n    // (?=.*[0-9])\tThe string must contain at least 1 numeric character\n    // (?=.*[!@#$%^&*])\tThe string must contain at least one special character, but we are escaping reserved RegEx characters to avoid conflict\n    // (?=.{8,})\tThe string must be eight characters or longer\n\n    // if (!password.match(strongPasswordRegex)) {\n    //   setMsg(\"Password is not strong enough\");\n    //   return;\n    // }\n    if (!username || !password || !fullname) {\n      toasting(0, \"one or more of the inputs are empty\")\n    } else\n      userService\n        .signup(signupCred)\n        .then((user) => {\n          setSignupCred({ fullname: \"\", username: \"\", password: \"\" });\n          setLoggedInUser(user);\n          history.push(\"/board\");\n        })\n        .catch((err) => toasting(0, err));\n  };\n\n\n\n\n\n  return mounted && (\n    <section className=\"background-div\">\n      <ToastContainer\n        limit={2}\n        position=\"bottom-center\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <div className=\"first-level-wrapper\">\n        <div className=\"img-container\">\n          <img src={register} alt=\"office\" />\n        </div>\n        {(loggedInUser ?\n          (\n            <div className=\"flex column justify-space-around\">\n              <h1> Hello {loggedInUser.fullname}</h1>\n              <button className=\"rounded\" onClick={doLogout}>Logout</button>\n            </div>\n          ) : (\n            <div className=\"login\">\n              <div className=\"flex justify-center\">\n                {logSignToggler ? (\n                  <h1>Taskday</h1>\n                ) : (\n                  <h1>Join Taskday</h1>\n                )}\n              </div>\n              {logSignToggler ? (\n                <div>\n                  <TextField\n                    style={{ width: \"100%\", margin: \"10px 0 0  0\" }}\n                    variant=\"outlined\"\n                    type=\"text\"\n                    name=\"username\"\n                    value={loginCred.username}\n                    onChange={onChangeHandler}\n                    label={\"username\"}\n                  />\n                  <br />\n                  <TextField\n                    style={{ width: \"100%\", margin: \"10px 0 0 0 \" }}\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    value={loginCred.password}\n                    onChange={onChangeHandler}\n                    label={\"password\"}\n                  />\n                  <div className=\"spacer\" />\n                  <div className=\"flex column\">\n\n                    <div className=\"login-buttons\">\n                      <button\n                        onClick={() => {\n                          clearInputs();\n                          setLogSignToggler(false);\n                        }}\n                        className=\"register-btn\"\n                      >\n                        Register Here\n                      </button>\n                      <button className=\"rounded\" onClick={doLogin}>\n                        Continue\n                      </button>\n                    </div>\n                    <button className=\"guest-btn\" onClick={guestLogin}>\n                      Login as a guest\n                    </button>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"sign-up\">\n                  <form className=\"flex column justify-center\" onSubmit={doSignup}>\n                    <TextField\n                      style={{ width: \"100%\", margin: \" 10px  0 10px 0 \" }}\n                      type=\"text\"\n                      name=\"fullname\"\n                      variant=\"outlined\"\n                      value={signupCred.fullname}\n                      onChange={onChangeHandler}\n                      label={\"Full name\"}\n                    />\n                    <TextField\n                      style={{ width: \"100%\", margin: \" 0  0 10px 0 \" }}\n                      variant=\"outlined\"\n                      type=\"text\"\n                      name=\"username\"\n                      value={signupCred.username}\n                      onChange={onChangeHandler}\n                      label={\"username\"}\n                    />\n                    <TextField\n                      style={{ width: \"100%\", margin: \" 0  0 10px 0 \" }}\n                      variant=\"outlined\"\n                      name=\"password\"\n                      type=\"password\"\n                      value={signupCred.password}\n                      onChange={onChangeHandler}\n                      label={\"password\"}\n                    />\n                    <button\n                      type=\"sumbit\"\n                      className=\"rounded\"\n                    >\n                      Continue\n                    </button>\n                    <div className=\"spacer\" />\n                    <h4>\n                      Already a member?\n                      <span\n                        className=\"signin-route-span\"\n                        onClick={() => {\n                          clearInputs();\n                          setLogSignToggler(true);\n                        }}\n                      >\n                        Sign In\n                      </span>\n                    </h4>\n                  </form>\n                </div>\n              )}\n            </div>\n          ))}\n      </div>\n\n    </section>\n  )\n};\n","import { Board } from \"./modules/board\";\nimport { LoginSignup } from \"./modules/user/cmps/LoginSignup\";\n// import { LoginSignup } from \"./modules/user/cmps/LoginSignup\";\n\nexport const routes = [\n  {\n    exact: true,\n    path: \"/\",\n    component: Board,\n  },\n  {\n    exact: true,\n    path: ['/board', '/board/:boardId'],\n    component: Board,\n  },\n  {\n    exact: true,\n    path: \"/sign\",\n    component: LoginSignup\n  },\n  {\n    //NEEDS TO BE NOT FOUND\n    component: LoginSignup\n  }\n\n];\n","// import './assets/styles/global.scss';\nimport { routes } from \"./routes.js\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nexport function App() {\n  return (\n\n    <BrowserRouter>\n      <Switch>\n        {routes.map((route,idx) => (\n          <Route\n            exact={route.exact}\n            key={idx}\n            component={route.component}\n            path={route.path}\n          />\n        ))}\n      </Switch>\n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, applyMiddleware, combineReducers , compose } from 'redux'\nimport thunk from 'redux-thunk';\nimport { boardReducer } from './reducers/boardReducer.js'\n\nconst rootReducer = combineReducers({\n    boardModule: boardReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\n// For Debug\nwindow.theStore = store;\n// store.subscribe(() => {\n//     // console.log('Global State is:', store.getState())\n// })\n\n","import './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport '../src/assets/styles/global.scss';\nimport {store} from './store/store'\n\n// const rootReducer = combineReducers({\n//   boardModule: boardReducer\n// })\n\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <React.StrictMode> */}\n      <App />\n    {/* </React.StrictMode> */}\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}